# SOURCE: https://docs.pi-hole.net/guides/dns/unbound/
# SOURCE: https://nlnetlabs.nl/documentation/unbound/howto-optimise/
# SOURCE: https://nlnetlabs.nl/documentation/unbound/howto-optimise/
# SOURCE: https://manpages.ubuntu.com/manpages/trusty/man5/unbound.conf.5.html
server:
    # If no logfile is specified, syslog is used
    logfile: "/var/log/unbound/unbound.log"
    log-time-ascii: yes
    verbosity: 2
    log-queries: yes
    log-replies: yes
    log-tag-queryreply: yes
    log-servfail: yes

    # SOURCE: https://www.sherbers.de/diy-linux-router-part-5-dns-with-unbound/
    # ACL
    access-control: 0.0.0.0/0 allow
    access-control: 192.168.1.0/24 allow
    access-control: 192.168.2.0/24 allow
    access-control: 192.168.3.0/24 allow
    # access-control: ::/0 allow

    interface: 127.0.0.1
    # Interface  to use to connect to the network. This interface is used to send queries
    # to authoritative servers and receive their replies. Can be given multiple times  to
    # work  on  several  interfaces. If none are given the default (all) is used. You can
    # specify the same  interfaces  in  interface:  and  outgoing-interface:  lines,  the
    # interfaces  are then used for both purposes. Outgoing queries are sent via a random
    # outgoing interface to counter spoofing.
    outgoing-interface: 0.0.0.0
    port: 5335
    do-ip4: yes
    do-udp: yes
    do-tcp: yes

    # May be set to yes if you have IPv6 connectivity
    do-ip6: no

    # You want to leave this to no unless you have *native* IPv6. With 6to4 and
    # Terredo tunnels your web browser should favor IPv4 for the same reasons
    prefer-ip6: no

    # Use this only when you downloaded the list of primary root servers!
    # If you use the default dns-root-data package, unbound will find it automatically
    root-hints: "/var/lib/unbound/root.hints"

    # Trust glue only if it is within the server's authority
    harden-glue: yes

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes BOGUS
    harden-dnssec-stripped: yes

    # Don't use Capitalization randomization as it known to cause DNSSEC issues sometimes
    # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378 for further details
    use-caps-for-id: no

    # Reduce EDNS reassembly buffer size.
    # IP fragmentation is unreliable on the Internet today, and can cause
    # transmission failures when large DNS messages are sent via UDP. Even
    # when fragmentation does work, it may not be secure; it is theoretically
    # possible to spoof parts of a fragmented DNS message, without easy
    # detection at the receiving end. Recently, there was an excellent study
    # >>> Defragmenting DNS - Determining the optimal maximum UDP response size for DNS <<<
    # by Axel Koolhaas, and Tjeerd Slokker (https://indico.dns-oarc.net/event/36/contributions/776/)
    # in collaboration with NLnet Labs explored DNS using real world data from the
    # the RIPE Atlas probes and the researchers suggested different values for
    # IPv4 and IPv6 and in different scenarios. They advise that servers should
    # be configured to limit DNS messages sent over UDP to a size that will not
    # trigger fragmentation on typical network links. DNS servers can switch
    # from UDP to TCP when a DNS response is too big to fit in this limited
    # buffer size. This value has also been suggested in DNS Flag Day 2020.
    edns-buffer-size: 1232

    # Perform prefetching of close to expired message cache entries
    # This only applies to domains that have been frequently queried
    prefetch: yes

    # One thread should be sufficient, can be increased on beefy machines. In reality for most users running on small networks or on a single machine, it should be unnecessary to seek performance enhancement by increasing num-threads above 1.
    # num-threads: 1

    # Ensure kernel buffer is large enough to not lose messages in traffic spikes
    # so-rcvbuf: 1m

    # Ensure privacy of local IP ranges
    private-address: 192.168.0.0/16
    private-address: 169.254.0.0/16
    private-address: 172.16.0.0/12
    private-address: 10.0.0.0/8
    private-address: fd00::/8
    private-address: fe80::/10

    # SOURCE: https://wiki.archlinux.org/title/unbound
    private-domain: "intranet"
    private-domain: "internal"
    private-domain: "private"
    private-domain: "corp"
    private-domain: "home"
    private-domain: "lan"

    # SOURCE: https://github.com/letsencrypt/unbound_exporter
    extended-statistics: yes
    statistics-cumulative: yes

    # ***********************************************************************************
    # SOURCE: https://nlnetlabs.nl/documentation/unbound/howto-optimise/
    # ***********************************************************************************
    # some optimisation options
    # use all CPUs
    # Set num-threads equal to the number of CPU cores on the system. E.g. for 4 CPUs with 2 cores each, use 8.
    num-threads: 8

    # power of 2 close to num-threads
    # Number of slabs in the message cache. Slabs  reduce  lock  contention  by  threads.
    # Must  be set to a power of 2. Setting (close) to the number of cpus is a reasonable
    # guess.
    msg-cache-slabs: 8
    # Number  of slabs in the RRset cache. Slabs reduce lock contention by threads.  Must be set to a power of 2.
    rrset-cache-slabs: 8
    infra-cache-slabs: 8
    key-cache-slabs: 8

    # SOURCE: https://github.com/lovesegfault/nix-config/blob/8eacef3c2e59bdcf5feeb4e6b581c7e2bcd4a624/services/unbound.nix#L49
    # more cache memory, rrset=msg*2
    rrset-cache-size: 256m
    msg-cache-size: 256m

    # more outgoing connections
    # depends on number of cores: 1024/cores - 50
    #outgoing-range: 950

    # Larger socket buffer.  OS may need config.
    so-rcvbuf: 4m
    so-sndbuf: 4m

    # Faster UDP with multithreading (only on Linux).
    so-reuseport: yes

    # with libevent
    # Number of ports to open. This number of file descriptors can be opened per  thread.
    # Must  be  at least 1. Default depends on compile options. Larger numbers need extra
    # resources from the operating system.  For performance a a very large value is best,
    # use libevent to make this possible.
    outgoing-range: 8192
    num-queries-per-thread: 4096

    module-config: "respip validator iterator"
    # auto-trust-anchor-file: "/var/lib/unbound/root.key"
    # TUNING: https://github.com/felix-fly/qsdk-11/blob/78ca575f8c9fe37eb222d0f7be8303510843aa8a/qca/feeds/packages/net/unbound/files/unbound.sh
    statistics-interval: 0
    # SOURCE: https://nlnetlabs.nl/documentation/unbound/howto-anchor/
    # And Test It
    # If you then dig com. SOA +dnssec you should see the AD flag there. If things go wrong, try the unbound option val-log-level: 2 that will log explanations why the DNSSEC validation fails (one line per failed query).
    # dig fail01.dnssec.works @127.0.0.1 -p 5335
    # dig dnssec.works @127.0.0.1 -p 5335
    val-log-level: 2

remote-control:
    control-enable: yes
    # control-interface: /var/run/unbound.sock
    control-use-cert: no
    # Give IPv4 or IPv6 addresses to listen on for control commands.  By default  localhost
    # (127.0.0.1 and ::1) is listened to.  Use 0.0.0.0 and ::0 to listen to all interfaces.
    control-interface: 127.0.0.1