{% raw %}
error_log  /dev/stderr;
pid        /tmp/nginx.pid;
worker_rlimit_nofile 8192;

events {
    worker_connections  4096;  ## Default: 1024
}

http {
  client_body_temp_path /tmp/client_temp;
  proxy_temp_path       /tmp/proxy_temp_path;
  fastcgi_temp_path     /tmp/fastcgi_temp;
  uwsgi_temp_path       /tmp/uwsgi_temp;
  scgi_temp_path        /tmp/scgi_temp;

  proxy_http_version    1.1;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   /dev/stderr  main;
  sendfile     on;
  tcp_nopush   on;

  upstream read {
    server loki-read:3100;
  }

  upstream write {
    server loki-write:3100;
  }

  upstream backend {
    server loki-backend:3100;
  }

  upstream cluster {
    server loki-read:3100;
    server loki-write:3100;
  }

  upstream push {
    server pushgateway:9091;
  }

  server {
    listen 80;
    listen 3100;
    listen 9091;
    proxy_read_timeout 310s;
    proxy_send_timeout 310s;

    location = / {
      return 200 'OK';
      auth_basic off;
      access_log off;
    }

    location = /ring {
        proxy_pass       http://cluster$request_uri;
    }

    location = /memberlist {
        proxy_pass       http://cluster$request_uri;
    }

    location = /services {
        proxy_pass       http://cluster$request_uri;
    }

    location = /config {
        proxy_pass       http://cluster$request_uri;
    }

    location = /metrics {
        proxy_pass       http://cluster$request_uri;
    }

    location = /ready {
        proxy_pass       http://cluster$request_uri;
    }

    location = /api/prom/push {
        proxy_pass       http://write$request_uri;
        proxy_http_version 1.1;
    }

    location = /api/prom/tail {
        proxy_pass       http://read$request_uri;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
    }

    # Ruler
    location ~ /prometheus/api/v1/alerts.* {
      proxy_pass       http://backend$request_uri;
    }
    location ~ /prometheus/api/v1/rules.* {
      proxy_pass       http://backend$request_uri;
    }
    location ~ /api/prom/rules.* {
      proxy_pass       http://backend$request_uri;
    }
    location ~ /api/prom/alerts.* {
      proxy_pass       http://backend$request_uri;
    }

    location ~ /api/prom/.* {
        proxy_pass       http://read$request_uri;
        proxy_http_version 1.1;
    }

    location = /loki/api/v1/push {
        proxy_pass       http://write$request_uri;
        proxy_http_version 1.1;
    }

    location = /loki/api/v1/tail {
        proxy_pass       http://read$request_uri;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
    }

    location ~ /loki/api/.* {
        proxy_pass       http://read$request_uri;
        proxy_http_version 1.1;
    }

  }
}
{% endraw %}
